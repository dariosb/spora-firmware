set nocompatible
source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim
behave mswin

set diffexpr=MyDiff()
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  let eq = ''
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      let cmd = '""' . $VIMRUNTIME . '\diff"'
      let eq = '"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3 . eq
endfunction

:colorscheme torte
:set tabstop=4
:set shiftwidth=4
:set expandtab
:au FileType objc,c,ch,cpp noremap <buffer> <F6> :call Uncrustify('c')<CR

" Assign some keys for handy quickfix window commands.
if has("win32")
  nnoremap <kPlus>     :call <SID>Fancy_Quickfix_Cmd(':cnext')<CR>
  nnoremap <kMinus>    :call <SID>Fancy_Quickfix_Cmd(':cprev')<CR>
"  nnoremap <kMultiply> :call <SID>Fancy_Quickfix_Cmd(':cl')<CR>
"  nnoremap <kMultiply> :cl<CR>
  nnoremap <c-kPlus>   :clast<CR>
  nnoremap <c-kMinus>  :cfirst<CR>
  nnoremap <m-kPlus>   :cnewer<CR>
  nnoremap <m-kMinus>  :colder<CR>
  map <F4> :execute "vimgrep /" . expand("<cword>") . "/ **/*.c"<CR>
  map <F3> :execute "vimgrep /" . expand("<cword>") . "/ **/*.h"<CR>
endif

" Very simple wrapper: do quickfix cmd, center line and,
" if taglist.vim's window is open, sync.
function s:Fancy_Quickfix_Cmd(Cmd)
  try
    execute a:Cmd
  catch /^Vim(\a\+):E553:/
    echohl ErrorMsg | echo v:exception | echohl None
  endtry
  norm! zz
  " If the taglist window is open then :TlistSync
  "    Tag list window name: '__Tag_List__'
  if bufwinnr('__Tag_List__') != -1
    TlistSync
  endif
endfunction
